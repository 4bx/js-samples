{"mappings":"MASO,MCPDA,EAASC,SAASC,eAAe,UAEvCC,OAAOC,iBAAiB,WAAYC,IDKR,CAC1BA,GAEOA,EAAMC,MAA4B,kBAApBD,EAAMC,KAAKC,KCP5BC,CAAgBH,KAClBL,EAAOS,MAAMC,OAAM,GAAML,EAAMC,KAAKK,KAAKD,OAAS,WAI/B,IAAIE,gBAAgBC,IAEzCV,OAAOW,QAAQC,SAASC,eAAeC,gBAG1BC,QAAQlB","sources":["src/playground/shared.ts","src/playground/resizer.ts"],"sourcesContent":["export interface ResizeData {\n  rect: DOMRectReadOnly;\n  type: \"resizeMessage\";\n}\n\nexport interface ResizeMessage extends MessageEvent {\n  data: ResizeData;\n}\n\nexport const isResizeMessage = (\n  event: MessageEvent\n): event is ResizeMessage => {\n  return event.data && event.data.type === \"resizeMessage\";\n};\n","import { isResizeMessage } from \"./shared\";\n\nconst iframe = document.getElementById(\"iframe\") as HTMLIFrameElement;\n\nwindow.addEventListener(\"message\", (event) => {\n  if (isResizeMessage(event)) {\n    iframe.style.height = `${event.data.rect.height + 50}px`;\n  }\n});\n\nconst resizeObserver = new ResizeObserver((entries) => {\n  // @ts-ignore\n  window.devsite.framebox.AutoSizeClient.updateSize();\n});\n\nresizeObserver.observe(iframe);\n"],"names":["$e9da754dd7bcba9d$var$iframe","document","getElementById","window","addEventListener","event","data","type","$f3ca394c9793faaf$export$74e3d39bd08cde6a","style","height","rect","ResizeObserver","entries","devsite","framebox","AutoSizeClient","updateSize","observe"],"version":3,"file":"resizer.js.map"}